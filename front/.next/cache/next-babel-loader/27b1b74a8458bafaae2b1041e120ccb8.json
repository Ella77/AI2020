{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/kpmg/front/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport createSagaMiddleware from \"redux-saga\";\nimport axios from \"axios\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nvar App = function App(_ref) {\n  var Componet = _ref.Componet,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"kpmg\")), __jsx(Componet, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nApp.getInitialProps = function _callee(context) {\n  var pageProps, ctx, Componet, state, cookie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pageProps = {};\n          ctx = context.ctx, Componet = context.Componet;\n          state = ctx.store.getState();\n          cookie = ctx.isServer ? ctx.req.headers.cookie : \"\";\n\n          if (ctx.isServer && cookie) {\n            axios.defaults.headers.cookie = cookie;\n          }\n\n          if (!state.user.user && cookie) {// ctx.store.dispatch({\n            //   //load user request\n            // });\n          }\n\n          if (!Component.getInitialProps) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(Componet.getInitialProps(ctx));\n\n        case 9:\n          pageProps = _context.sent;\n\n        case 10:\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // FOR REDUX DEVTOOLS EXTENSION\n\n\nvar configureStore = function configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var composeEnhancer = composeWithDevTools({// options like actionSanitizer, stateSanitizer\n  });\n  var enhancer = composeEnhancer(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(App));","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/kpmg/front/pages/_app.tsx"],"names":["React","Provider","Head","withRedux","withReduxSaga","applyMiddleware","createStore","composeWithDevTools","createSagaMiddleware","axios","reducer","rootSaga","App","Componet","store","pageProps","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","user","Component","configureStore","initialState","sagaMiddleware","middlewares","composeEnhancer","enhancer","sagaTask","run"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,eAAT,EAAmCC,WAAnC,QAA6D,OAA7D;AACA,SAASC,mBAAT,QAAoC,8CAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAoC;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC9C,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,MAAC,QAAD,eAAcC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CADF;AAQD,CATD;;AAWAH,GAAG,CAACI,eAAJ,GAAsB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBF,UAAAA,SADgB,GACJ,EADI;AAEZG,UAAAA,GAFY,GAEMD,OAFN,CAEZC,GAFY,EAEPL,QAFO,GAEMI,OAFN,CAEPJ,QAFO;AAGdM,UAAAA,KAHc,GAGND,GAAG,CAACJ,KAAJ,CAAUM,QAAV,EAHM;AAIdC,UAAAA,MAJc,GAILH,GAAG,CAACI,QAAJ,GAAeJ,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBH,MAA/B,GAAwC,EAJnC;;AAKpB,cAAIH,GAAG,CAACI,QAAJ,IAAgBD,MAApB,EAA4B;AAC1BZ,YAAAA,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuBH,MAAvB,GAAgCA,MAAhC;AACD;;AACD,cAAI,CAACF,KAAK,CAACO,IAAN,CAAWA,IAAZ,IAAoBL,MAAxB,EAAgC,CAC9B;AACA;AACA;AACD;;AAZmB,eAahBM,SAAS,CAACX,eAbM;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAcAH,QAAQ,CAACG,eAAT,CAAyBE,GAAzB,CAdA;;AAAA;AAclBH,UAAAA,SAdkB;;AAAA;AAAA,2CAgBb;AAAEA,YAAAA,SAAS,EAATA;AAAF,WAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,C,CAmBA;;;AAOA,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAyB;AAC9C,MAAMC,cAAc,GAAGtB,oBAAoB,EAA3C;AACA,MAAMuB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,eAAe,GAAGzB,mBAAmB,CAAC,CAC1C;AAD0C,GAAD,CAA3C;AAGA,MAAM0B,QAAQ,GAAGD,eAAe,CAAC3B,eAAe,MAAf,SAAmB0B,WAAnB,CAAD,CAAhC;AACA,MAAMjB,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUmB,YAAV,EAAwBI,QAAxB,CAAzB;AACAnB,EAAAA,KAAK,CAACoB,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBxB,QAAnB,CAAjB;AACA,SAAOG,KAAP;AACD,CAVD;;AAYA,eAAeX,SAAS,CAACyB,cAAD,CAAT,CAA0BxB,aAAa,CAACQ,GAAD,CAAvC,CAAf","sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { NextPage, NextPageContext } from \"next\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport withReduxSaga from \"next-redux-saga\";\nimport { applyMiddleware, compose, createStore, Store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport createSagaMiddleware from \"redux-saga\";\nimport axios from \"axios\";\n\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { store } from \"../reducers/indext.type\";\n\nconst App = ({ Componet, store, pageProps }) => {\n  return (\n    <Provider store={store}>\n      <Head>\n        <title>kpmg</title>\n      </Head>\n      <Componet {...pageProps} />\n    </Provider>\n  );\n};\n\nApp.getInitialProps = async context => {\n  let pageProps = {};\n  const { ctx, Componet } = context;\n  const state = ctx.store.getState();\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : \"\";\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.cookie = cookie;\n  }\n  if (!state.user.user && cookie) {\n    // ctx.store.dispatch({\n    //   //load user request\n    // });\n  }\n  if (Component.getInitialProps) {\n    pageProps = await Componet.getInitialProps(ctx);\n  }\n  return { pageProps };\n};\n\n// FOR REDUX DEVTOOLS EXTENSION\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__?: typeof compose;\n  }\n}\n\nconst configureStore = (initialState: store) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const composeEnhancer = composeWithDevTools({\n    // options like actionSanitizer, stateSanitizer\n  });\n  const enhancer = composeEnhancer(applyMiddleware(...middlewares));\n  const store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(App));\n"]},"metadata":{},"sourceType":"module"}